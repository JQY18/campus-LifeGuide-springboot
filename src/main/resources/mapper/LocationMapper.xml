<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="renko.jiang.campus_trade.mapper.LocationMapper">
    <insert id="saveImages">
        insert into location_images (location_detail_id, url)
        values
        <foreach collection="images" item="url" separator=",">
            (#{id},#{url})
        </foreach>
    </insert>
    <insert id="saveVideos">
        insert into location_videos (location_detail_id, url)
        values
        <foreach collection="videos" item="url" separator=",">
            (#{id},#{url})
        </foreach>
    </insert>



    <update id="updateLocation">
        update location
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="x != null">x = #{x},</if>
            <if test="y != null">y = #{y},</if>
            <if test="description != null">description = #{description},</if>
            <if test="image != null">image = #{image},</if>
            <if test="detailId != null">detail_id = #{detailId},</if>
            <if test="category != null">category = #{category}</if>
        </set>
        where id = #{id}
    </update>

    <update id="updateLocationDetails">
        update location_detail
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="description != null">description = #{description}</if>
        </set>
        where id = #{id}
    </update>
    <select id="getAllLocations" resultType="renko.jiang.campus_trade.controller.admin.pojo.entity.Location"
            parameterType="java.lang.Integer">
        select id,
               name,
               x,
               y,
               description,
               image,
               detail_id,
               category,
               created_time
        from location
        <where>
            <if test="locationId != null and locationId != 0">
                and id = #{locationId}
            </if>
        </where>
        order by created_time desc
    </select>
    <select id="queryCommentsByPage"
            resultType="renko.jiang.campus_trade.controller.admin.pojo.entity.DetailComment">
        select id,
               detail_id,
               username,
               content,
               create_time as time
        from detail_comment
        <where>
            <if test="detailCommentDTO.detailId != null and detailCommentDTO.detailId != ''">
                and detail_id = #{detailCommentDTO.detailId}
            </if>
            <if test="detailCommentDTO.content != null and detailCommentDTO.content != ''">
                and content like concat('%',#{detailCommentDTO.content},'%')
            </if>
            <if test="detailCommentDTO.startTime != null">
                and create_time &gt;= #{detailCommentDTO.startTime}
            </if>
            <if test="detailCommentDTO.endTime != null">
                and create_time &lt;= #{detailCommentDTO.endTime}
            </if>
        </where>
        order by create_time desc
        limit #{start},#{pageSize}
    </select>
    <select id="queryCommentsByPageCount" resultType="java.lang.Integer">
        select count(1)
        from detail_comment
        <where>
            <if test="detailId != null and detailId != ''">
                and detail_id = #{detailId}
            </if>
            <if test="startTime != null and startTime != ''">
                and create_time &gt;= #{startTime}
            </if>
            <if test="endTime != null and endTime != ''">
                and create_time &lt;= #{endTime}
            </if>
        </where>
    </select>
</mapper>